# _UDA_SETUP = 'S2C'  # synthia to cityscapes
# _UDA_SETUP = 'S2M' # synthia to mapillary
# _MODEL_TYPE = 'DEEPLABV2' # proposed model with deeplabv2 (with depth fusion)
# _MODEL_TYPE = 'PANOPTIC-DEEPLAB' # proposed model with panoptic deeplab net arch (with depth fusion)
# _MODEL_TYPE = 'BASELINE' # baseline with deeplabv2  - no unlablled loss

TARGET: 'Cityscapes' # TODO
#TARGET: 'Mapillary' # TODO
NUM_VAL_SAMPLES_DURING_DEBUG: 50 # this is used by the panoptic evaluation script # TODO


FDIST_LAMBDA: 0.00001 # 0.00005 # 0.0005 # 0.005
ACTIVATE_DAFORMER_FEAT_DIST_LOSS: True
DEACTIVATE_UNLABELED_CENTER_OFFSET_LOSS: True
INIT_MODEL_WITH_IMGNET_WEIGHTS: True # TODO: set it True only for the Lukas DAFormer feature distance exp, other wise false
INIT_MODEL_WITH_DACS_IMGNET_COCO_WEIGHTS: False # set it True for all experiment except  Lukas DAFormer feature distance exp
INIT_MODEL_WITH_DADA_IMGNET_WEIGHTS: False

RESUME_TRAINING_FROM_CHECKPOINT: False # TODO: use this for debug purpose or resume training from a checkpoint
SET_DETECT_ANOMALY: False
APPLY_CLIP_GRAD_NORM: False
APPLY_CENTER_LOSSES_THRESHOLDING: True
CENTER_LOSSES_THRESHOLD: 14.0
PSEUDO_WEIGHT_IGNORE_TOP: True # set it to true when target is cityscapes, for mapillary let it be false
PSEUDO_WEIGHT_IGNORE_TOP_VAL: 15 # TODO: GET IT FROM DAFORMER
PSEUDO_WEIGHT_IGNORE_BOTTOM: True # set it to true when target is cityscapes, for mapillary let it be false
PSEUDO_WEIGHT_IGNORE_BOTTOM_VAL: 120 # TODO: GET IT FROM DAFORMER
UNLABELED_CENTER_LOSS_WEIGHT: 10.0
UNLABELED_OFFSET_LOSS_WEIGHT: 0.01

INST_DEPTH_FUSION_MODE: 2
SAVE_VISUALS_AFTER: 5
APPLY_RARE_CLASS_SAMPLING: True
UDA_SETUP: 'S2C' # or 'S2M'
MODEL_TYPE: 'DEEPLABV2'  # or 'PANOPTIC-DEEPLAB' or 'BASELINE'
#TRAIN.CENTER_HEAD_DADA_STYLE:false

DATASET:
  RANDOM_CROP_DIM: 450 # TODO:Nov3

INCLUDE_DADA_AUXBLOCK: False  # TODO
INCLUDE_DEPTH_FUSION: False
APPLY_PANOPTIC_DEEPLAB_AUGMENTATION: False
PANOPTIC_DEEPLAB_TRANSFORMS_RANDOM_SCALES: [0.5,2.0,0.1]  # to deactivate random scale set it to [1,1,0]



MODEL_SUB_TYPE: 'deeplabv3'
#MODEL_SUB_TYPE: 'deeplabv2'
# TRAIN_DEPTH_BRANCH: True

#INCLUDE_DADA_AUXBLOCK=True  # TODO
#TRAIN_TRAIN_DEPTH_BRANCH=False   # TODO
#USE_DEPTH=False    # TODO
#DADA_STYLE_DEPTH_HEAD=False # TODO: this will take effect if TRAIN_TRAIN_DEPTH_BRANCH=True
#INST_DEPTH_FUSION_MODE=0  # not used



ACTIVATE_SEMANITC_EVAL: False
ACTIVATE_PANOPTIC_EVAL: False
ACTIVATE_ONLY_PANOPTIC_EVAL: True


DUMP_PANOPTIC_VISUAL_IMGS: False


TRAIN_EMA_MODEL: True
DADA_STYLE_DEPTH_HEAD: False # TODO: this will take effect if TRAIN_TRAIN_DEPTH_BRANCH=True




USE_DEPTH: True    # TODO
#TRAIN_TRAIN_DEPTH_BRANCH: True   # TODO


MAX_NORM_VALUE: 100.0

SELECT_ONLY_THINGS_IN_CLASSMIX: False

#CENTER:
#  WEIGHT: 200.0
#EVAL_PANOP_AFTER: 10


ACTIVATE_DACS_UNLABELED_LOSS: True # TODO:Nov3
DACS_RANDOM_CROP: True # TODO:Nov3

ACTIVATE_PERF_COUNTER: False

SYNTHIA_DATALOADING_MODE: 'original_only'
CITYSCAPES_DATALOADING_MODE: 'dacs'





ENABLE_DISCRIMINATOR: False

TRAIN_SCRIPT_NAME: 'train_panop_dacs'

APPROACH_TYPE: 'OTHERS'

MHA_DADA:
  ACTIVATE_MHA: False
  MODE: 0
  POS_ENCODING: True
  AVG_POOL_DIM_SRC: [24, 41]
  AVG_POOL_DIM_TAR: [17, 33]
  UPSAMPLE_SHAPE_SRC: [48, 81]
  UPSAMPLE_SHAPE_TAR: [33, 65]

# used when APPROACH_TYPE: 'DANDA'
TRANSFORMER_ENCODER_D_MODEL: 16
DISCRIMINATOR_TYPE: 'dada'

WEIGHT_INITIALIZATION:
  DACS_COCO_MODEL: True
  DADA_DEEPLABV2: False
  DADA_PRETRAINED: False
  DADA_PRETRAINED_DEPTH_ENC: False
  DADA_PRETRAINED_SINGLE_CONV_DEC: False
  DADA_PRETRAINED_SEMANTIC_HEAD: False

MODEL_FILE: 'dada_model_new'
DADA_MODEL_BACKBONE: 'ctrl'
EXP_SETUP: 'SYNTHIA_TO_CITYSCAPES'
GPUS: [0]
TRAIN_ONLY_SOURCE: False

PRETRAINED_WEIGHTS_FOR_TRAIN: 'DADA_IMGNET'
PANOPTIC_DEEPLAB_STYLE_LR: False
DADA_STYLE_LR: True
ADV_FEATURE_MODE: 1
DISC_INP_DIM: 16

LOSS:
  SEMANTIC:
    NAME: 'dada_sem_loss'
  CENTER:
    WEIGHT: 100.0 # 200.0
  OFFSET:
    WEIGHT: 0.01
  DEPTH:
    WEIGHT: 0.001  # TODO:Nov3

TRAIN:
  TRAIN_WITH_DACS: True
  TRAIN_INSTANCE_BRANCH: True
  TRAIN_DEPTH_BRANCH: True  # TODO:Nov3
  CENTER_HEAD_DADA_STYLE: False
  IMS_PER_BATCH: 2  # TODO:Nov3
  INPUT_SIZE_SOURCE: [1280, 760] # [640, 380] # TODO:Nov3
  INPUT_SIZE_TARGET: [1024, 768] # [512, 256]
  SAVE_PRED_EVERY: 1000000000
  EVAL_EVERY: 1000000000
  EVAL_EVERY_PANOP: 10000000000
  TENSORBOARD_VIZRATE: 10000000000
  DISPLAY_LOSS_RATE: 1
  MAX_ITER: 250000
  FREEZE_BN: False
  IMGNET_PRETRAINED_MODEL_PATH: '/home/suman/apps/code/CVPR2021/MTI_Simon_ECCV2020/mti_simon/dada/pretrained_models'
  DADA_PRETRAINED_MODEL_FILE_PATH: '/home/suman/apps/code/CVPR2021/MTI_Simon_ECCV2020/mti_simon/dada/pretrained_models/dada_pretrained_model_50000_5.pth'

SOLVER:
  BASE_LR: 0.00025 # 0.00005 # 0.00005 # 0.00025
  DISC_LR: 0.0001
DATALOADER:
  NUM_WORKERS: 0 # TODO:Nov3

TEST:
  INPUT_SIZE_TARGET: [1024, 768] # [512, 256] # [2048, 1024] # [1024, 512] # [512, 256]
  OUTPUT_SIZE_TARGET: [1024, 768] # [512, 256] # [2048, 1024]
  NUM_SAMPLES_DEBUGMODE: 5 # this is used by the semanitc evaluation script # TODO


